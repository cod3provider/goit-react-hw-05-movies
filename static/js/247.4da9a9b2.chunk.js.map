{"version":3,"file":"static/js/247.4da9a9b2.chunk.js","mappings":"uMA4CA,UArCa,WACX,OAAwBA,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAUR,IANAE,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaH,GACZI,KAAKL,GACLM,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACN,KAECF,EACH,MAAO,oDAGT,IAAMW,EAAWX,EAAKY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACxB,2BACE,gBACEC,IAAKH,EAAY,UAfP,mCAeO,OAAgBA,GAAiBI,EAClDC,IAAI,GACJC,MAAM,SAER,uBAAIL,KACJ,uCAAeC,OAPRH,EADe,IAY1B,OACE,0BACE,wBACGF,KAIR,C,+LCxCDU,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,EAAAA,IAAU,uBADF,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,8BAAiCQ,IAD9B,cACpBJ,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZG,EAAe,mCAAG,WAAM5B,GAAN,uFACNmB,EAAAA,EAAAA,IAAA,iBAAoBnB,IADd,cACvBuB,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfrB,EAAY,mCAAG,WAAMH,GAAN,uFACHmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,aADG,cACpBuB,EADoB,yBAEnBA,EAASC,KAAK1B,MAFK,2CAAH,sDAKZ+B,EAAgB,mCAAG,WAAM7B,GAAN,uFACPmB,EAAAA,EAAAA,IAAA,iBAAoBnB,EAApB,aADO,cACxBuB,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qD","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport NoImage from '../NoImage/NoImage.jpg';\n\nimport { getMovieCast } from '../../services/api';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  const baseURL = \"https://image.tmdb.org/t/p/w200\";\n\n  useEffect(() => {\n    getMovieCast(movieId)\n    .then(setCast)\n    .catch(error => console.log(error))\n  }, [movieId]);\n\n  if (!cast) {\n    return \"We don't have any cast information on this movie.\";\n  }\n\n  const castItem = cast.map(({ id, profile_path, name, character }) => (\n    <li key={id}>\n      <img\n        src={profile_path ? `${baseURL}${profile_path}` : NoImage}\n        alt=''\n        width=\"200\"\n      />\n      <p>{name}</p>\n      <p>Character: {character}</p>\n    </li>\n  ))\n\n  return (\n    <div>\n      <ul>\n        {castItem}\n      </ul>\n    </div>\n  )\n}\n\nexport default Cast;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '86b2774f72e9923bd0f07dfe6f4fea8a',\n  language: 'en-US',\n}\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n}\n\nexport const searchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n}\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n}\n"],"names":["useState","cast","setCast","movieId","useParams","useEffect","getMovieCast","then","catch","error","console","log","castItem","map","id","profile_path","name","character","src","NoImage","alt","width","axios","api_key","language","getTrendingMovies","response","data","results","searchMovies","query","getMovieDetails","getMoviesReviews"],"sourceRoot":""}