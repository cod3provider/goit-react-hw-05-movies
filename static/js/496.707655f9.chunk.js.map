{"version":3,"file":"static/js/496.707655f9.chunk.js","mappings":"0NACA,EAA0B,2BAA1B,EAAiE,6BAAjE,EAA6G,gCAA7G,EAAqJ,yBAArJ,EAA0L,6BAA1L,EAAiO,2B,kBC2CjO,EAtCkB,SAAC,GAAc,IAAZA,EAAW,EAAXA,KAEjBC,EAKED,EALFC,YACAC,EAIEF,EAJFE,eACAC,EAGEH,EAHFG,aACAC,EAEEJ,EAFFI,SACAC,EACEL,EADFK,OAOF,OACE,iBAAKC,UAAWC,EAAhB,WACE,gBAAKD,UAAWC,EAAhB,UACE,gBAAKC,IAAKP,EAAW,UAPX,mCAOW,OAAgBA,GAAgBQ,EAChDC,IAAKR,EACLS,MAAM,MACNL,UAAWC,OAIlB,iBAAKD,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,SAAyBL,KACzB,wCAdiBU,KAAKC,MAA0B,GAApB,UAAGV,IAc/B,QAEA,cAAGG,UAAWC,EAAd,uBACA,uBAAIH,KAEJ,cAAGE,UAAWC,EAAd,qBACA,uBACGF,EAAOS,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,aAK/C,EC1CD,EAA0B,8BAA1B,EAAqE,iCAArE,EAAiH,+BAAjH,EAAuJ,2B,SCoDvJ,EA5CqB,WAAO,IAAD,IACzB,GAA0BC,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KAEQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAgBL,GACfM,KAAKP,GACLQ,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACR,IAEJ,IAAMW,EAAI,oBAAGT,EAASU,aAAZ,aAAG,EAAgBD,YAAnB,QAA2B,IAErC,OACE,yBACGb,IACC,iBAAKb,UAAWC,EAAhB,WACE,SAAC,KAAD,CAAMD,UAAWC,EAAc2B,GAAIF,EAAnC,sBACA,SAAC,EAAD,CAAWhC,KAAMmB,KACjB,iBAAKb,UAAWC,EAAhB,WACE,4BACE,mDACA,2BACE,yBACE,SAAC,KAAD,CAAMD,UAAWC,EAAQ2B,GAAG,OAAOD,MAAO,CAAED,KAAAA,GAA5C,qBAGF,yBACE,SAAC,KAAD,CAAM1B,UAAWC,EAAQ2B,GAAG,UAAUD,MAAO,CAAED,KAAAA,GAA/C,8BAIN,SAAC,EAAAG,SAAD,CAAUC,UAAU,wCAApB,UACE,SAAC,KAAD,aAQb,C,+LCjDDC,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QAAS,mCACTC,SAAU,SAGL,IAAMC,EAAiB,mCAAG,oGACRH,EAAAA,EAAAA,IAAU,uBADF,cACzBI,EADyB,yBAExBA,EAASC,KAAKC,SAFU,2CAAH,qDAKjBC,EAAY,mCAAG,WAAMC,GAAN,uFACHR,EAAAA,EAAAA,IAAA,8BAAiCQ,IAD9B,cACpBJ,EADoB,yBAEnBA,EAASC,KAAKC,SAFK,2CAAH,sDAKZjB,EAAe,mCAAG,WAAML,GAAN,uFACNgB,EAAAA,EAAAA,IAAA,iBAAoBhB,IADd,cACvBoB,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAY,mCAAG,WAAMzB,GAAN,uFACHgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,aADG,cACpBoB,EADoB,yBAEnBA,EAASC,KAAKK,MAFK,2CAAH,sDAKZC,EAAgB,mCAAG,WAAM3B,GAAN,uFACPgB,EAAAA,EAAAA,IAAA,iBAAoBhB,EAApB,aADO,cACxBoB,EADwB,yBAEvBA,EAASC,KAAKC,SAFS,2CAAH,qD","sources":["webpack://react-homework-template/./src/components/MovieInfo/MovieInfo.module.css?df02","components/MovieInfo/MovieInfo.jsx","webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.jsx","services/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieInfo_wrapper__TIELc\",\"container\":\"MovieInfo_container__MNRAo\",\"pictureThumb\":\"MovieInfo_pictureThumb__Gjzhf\",\"title\":\"MovieInfo_title__oNnRW\",\"infoTitle\":\"MovieInfo_infoTitle__8gt7o\",\"picture\":\"MovieInfo_picture__pTRQR\"};","import PropTypes from 'prop-types';\n\nimport s from './MovieInfo.module.css';\n\nimport NoImage from '../NoImage/NoImage.jpg';\n\nconst MovieInfo = ({ info }) => {\n  const {\n    poster_path,\n    original_title,\n    vote_average,\n    overview,\n    genres,\n  } = info;\n\n  const baseURL = 'https://image.tmdb.org/t/p/w500';\n\n  const getVotes = () => Math.round(`${vote_average}` * 10);\n\n  return (\n    <div className={s.wrapper}>\n      <div className={s.pictureThumb}>\n        <img src={poster_path ? `${baseURL}${poster_path}` : NoImage}\n             alt={original_title}\n             width=\"500\"\n             className={s.picture}\n        />\n      </div>\n\n      <div className={s.container}>\n        <h1 className={s.title}>{original_title}</h1>\n        <p>User Score: {getVotes()}%</p>\n\n        <p className={s.infoTitle}>Overview</p>\n        <p>{overview}</p>\n\n        <p className={s.infoTitle}>Genres</p>\n        <p>\n          {genres.map(genre => genre.name).join(', ')}\n        </p>\n      </div>\n    </div>\n  );\n};\nexport default MovieInfo;\n\nMovieInfo.propTypes = {\n  poster_path: PropTypes.string,\n  original_title: PropTypes.string,\n  vote_average: PropTypes.number,\n  overview: PropTypes.string,\n  genres: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n    })\n  ),\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__YMWLn\",\"backButton\":\"MovieDetails_backButton__pPF5M\",\"infoWrap\":\"MovieDetails_infoWrap__ylYWq\",\"link\":\"MovieDetails_link__U+v+7\"};","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useLocation, Link, Outlet } from 'react-router-dom';\n\nimport MovieInfo from '../../components/MovieInfo/MovieInfo';\n\nimport s from './MovieDetails.module.css';\n\nimport { getMovieDetails } from '../../services/api';\n\nconst MovieDetails = () => {\n  const [movie, setMovie] = useState(null);\n\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  useEffect(() => {\n    getMovieDetails(movieId)\n    .then(setMovie)\n    .catch(error => console.log(error))\n  }, [movieId])\n\n  const from = location.state?.from ?? '/';\n\n  return (\n    <div>\n      {movie && (\n        <div className={s.wrapper}>\n          <Link className={s.backButton} to={from}>Go back</Link>\n          <MovieInfo info={movie} />\n          <div className={s.infoWrap}>\n            <div>\n              <p >Additional information</p>\n              <ul>\n                <li>\n                  <Link className={s.link} to=\"cast\" state={{ from }}>Cast</Link>\n                </li>\n\n                <li>\n                  <Link className={s.link} to=\"reviews\" state={{ from }}>Reviews</Link>\n                </li>\n              </ul>\n            </div>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n        )\n      }\n    </div>\n  )\n}\n\nexport default MovieDetails;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\naxios.defaults.params = {\n  api_key: '86b2774f72e9923bd0f07dfe6f4fea8a',\n  language: 'en-US',\n}\n\nexport const getTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day');\n  return response.data.results;\n}\n\nexport const searchMovies = async query => {\n  const response = await axios.get(`/search/movie?query=${query}`);\n  return response.data.results;\n}\n\nexport const getMovieDetails = async movieId => {\n  const response = await axios.get(`/movie/${movieId}`);\n  return response.data;\n}\n\nexport const getMovieCast = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/credits`);\n  return response.data.cast;\n}\n\nexport const getMoviesReviews = async movieId => {\n  const response = await axios.get(`/movie/${movieId}/reviews`);\n  return response.data.results;\n}\n"],"names":["info","poster_path","original_title","vote_average","overview","genres","className","s","src","NoImage","alt","width","Math","round","map","genre","name","join","useState","movie","setMovie","movieId","useParams","location","useLocation","useEffect","getMovieDetails","then","catch","error","console","log","from","state","to","Suspense","fallback","axios","api_key","language","getTrendingMovies","response","data","results","searchMovies","query","getMovieCast","cast","getMoviesReviews"],"sourceRoot":""}